library ieee;
use ieee.std_logic_1164.all;

entity PC_Reg is
port(
	
	clk		:	in		std_logic;
	rSet		:	in		std_logic; 
	--writeEnable: in std_logic; @tag:0xfffo --//always write enable with the clk 
	--comint:u can use writeRnable as CacheHit wiring | done the next line @tag:0xBBB
	stopUpdatePC:in	std_logic;	
	nextPC	:	in 	std_logic_vector(31 downto 0);
	PC			:	out 	std_logic_vector(31 downto 0)
);
end PC_Reg;


architecture behavior of PC_Reg is
	begin
	process(clk,rSet)
		begin
		if rSet = '1' then
			PC <= x"00000000"; 
		elsif rising_edge(clk) then 
			--if( writeEnable = '1' ) then @tag:0xfffo --//always write enable with the clk 
			if(stopUpdatePC = '0')then --@tag:0xBBB
				PC <= nextPC ;
			end if;
			--end if;@tag:0xfffo --//always write enable with the clk 
		end if;
	end process;
end behavior;
